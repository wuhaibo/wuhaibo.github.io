<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker 常用命令</title>
      <link href="2021/06/12/docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2021/06/12/docker-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="Image相關"><a href="#Image相關" class="headerlink" title="Image相關"></a>Image相關</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 編譯image</span></span><br><span class="line">sudo docker build -t $imagename$ $Path_to_Dockerfile$</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出本机的所有 image 文件。</span></span><br><span class="line">sudo docker image ls</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除 image 文件</span></span><br><span class="line">sudo docker image rm $imageName$</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Container相關"><a href="#Container相關" class="headerlink" title="Container相關"></a>Container相關</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 得到正在運行的container</span></span><br><span class="line">sudo docker container ls</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 列出本机所有容器，包括终止运行的容器</span></span><br><span class="line">sudo docker container ls --all</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> start container</span></span><br><span class="line">sudo docker container start $containerID$</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> remove container</span></span><br><span class="line">sudo docker container -rm $containerName$</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 停止container</span></span><br><span class="line">sudo docker container stop $containerId$</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 得到運行中container的shell</span></span><br><span class="line">sudo docker exec -it $containerName or containerId$ /bin/bash</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker container logs</span></span><br><span class="line">sudo docker container logs [containerID]</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker container cp</span></span><br><span class="line">sudo docker container cp [containID]:[/path/to/file] </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Dockerfile-相關"><a href="#Dockerfile-相關" class="headerlink" title="Dockerfile 相關"></a>Dockerfile 相關</h3><p>一個例子：<a href="https://github.com/wuhaibo/python_cron_job_in_docker">https://github.com/wuhaibo/python_cron_job_in_docker</a></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.7</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; apt-get -y install cron vim</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setup cron job</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> crontab /etc/cron.d/crontab</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod 0644 /etc/cron.d/crontab</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> /usr/bin/crontab /etc/cron.d/crontab</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setup for python app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . /app</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip3 install -r /app/src/requirements.txt</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># run</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;cron&quot;</span>, <span class="string">&quot;-f&quot;</span>]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>FROM python:3.7 以python image為基礎製作image</li><li>RUN apt-get update &amp;&amp; apt-get -y install cron vim。 RUN 可以表示在image中用來執行shell命令</li><li>WORKDIR /app 指明並創建工作文件夾是/app</li><li>COPY crontab /etc/cron.d/crontab 把本機（host）的文件（./crontab）copy到image的/etc/cron.d/crontab</li><li>CMD [“cron”, “-f”] docker文件中必須有至少CMD 或者ENTRYPOINT命令。 <ul><li>exec 模式和 shell 模式:<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;executable&quot;</span>,<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;param2&quot;</span>] // 这是 <span class="built_in">exec</span> 模式的写法，注意需要使用双引号。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> <span class="built_in">command</span> param1 param2 // 这是 shell 模式的写法。</span></span><br></pre></td></tr></table></figure>exec 模式是建议的使用模式, exec 模式的特点是不会通过 shell 执行相关的命令, 不過可以這樣寫<br><code>CMD [ &quot;sh&quot;, &quot;-c&quot;, &quot;echo $HOME&quot; ]</code>。使用 shell 模式时，docker 会以 /bin/sh -c “task command” 的方式执行任务命令。也就是说容器中的 1 号进程不是任务进程而是 bash 进程</li></ul></li></ul><h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><ul><li>在DockerFile中写入的CMD后面的命令不执行主要是因为启动的时候指定了shell</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技術 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python cron job in docker</title>
      <link href="2021/06/12/python-cron-job-in-docker/"/>
      <url>2021/06/12/python-cron-job-in-docker/</url>
      
        <content type="html"><![CDATA[<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>This is a template for python cron job in docker.<br>The cron job is very simple. It writes string to /app/result.txt every min.</p><h3 id="Build-Docker-Image"><a href="#Build-Docker-Image" class="headerlink" title="Build Docker Image"></a>Build Docker Image</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker build -t cron_python</span><br></pre></td></tr></table></figure><h3 id="Run-Container"><a href="#Run-Container" class="headerlink" title="Run Container"></a>Run Container</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d --name python_cron_container cron_python</span><br></pre></td></tr></table></figure><h3 id="Check-Result"><a href="#Check-Result" class="headerlink" title="Check Result"></a>Check Result</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo docker exec -it python_cron_container /bin/bash</span><br><span class="line"></span><br><span class="line"># in container bash</span><br><span class="line">cat /app/result.txt</span><br></pre></td></tr></table></figure><h3 id="Stop-Container"><a href="#Stop-Container" class="headerlink" title="Stop Container"></a>Stop Container</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker container stop python_cron_container</span><br><span class="line">sudo docker container rm python_cron_container</span><br></pre></td></tr></table></figure><p>code could be found <a href="https://github.com/wuhaibo/python_cron_job_in_docker.git">https://github.com/wuhaibo/python_cron_job_in_docker.git</a></p>]]></content>
      
      
      <categories>
          
          <category> 技術 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows 常用命令</title>
      <link href="2021/06/02/windows-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2021/06/02/windows-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h3 id="get-wifi-password"><a href="#get-wifi-password" class="headerlink" title="get wifi password"></a>get wifi password</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh wlan show profile name=<span class="variable">$wlanName</span><span class="variable">$</span> key=<span class="built_in">clear</span></span><br></pre></td></tr></table></figure><h3 id="Get-windows-Service-with-execute-path"><a href="#Get-windows-Service-with-execute-path" class="headerlink" title="Get windows Service with execute path"></a>Get windows Service with execute path</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-WmiObject</span> win32_service  | <span class="built_in">select</span> Name, state, PathName | <span class="built_in">Sort-Object</span> state | <span class="built_in">Export-Csv</span> <span class="string">&quot;service.csv&quot;</span></span><br></pre></td></tr></table></figure><h3 id="ftp-cmd"><a href="#ftp-cmd" class="headerlink" title="ftp cmd"></a>ftp cmd</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ftp <span class="variable">$destination</span><span class="variable">$</span> </span><br><span class="line"><span class="comment">## give user name and password</span></span><br><span class="line"><span class="comment">## ? for help</span></span><br><span class="line"><span class="comment">## ! escape the cmd to shell</span></span><br><span class="line"><span class="comment">## send file use put</span></span><br></pre></td></tr></table></figure><h3 id="Get-scheduled-job-tasks"><a href="#Get-scheduled-job-tasks" class="headerlink" title="Get scheduled job/tasks"></a>Get scheduled job/tasks</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">schtasks /query /v /fo LIST</span><br><span class="line"></span><br><span class="line"><span class="comment">## powershell, this is not working for windows before windows 2012</span></span><br><span class="line"><span class="built_in">get-scheduledtask</span> | <span class="built_in">get-scheduledtaskinfo</span> | <span class="built_in">select</span> TaskName, TaskPath</span><br></pre></td></tr></table></figure><h3 id="find-file"><a href="#find-file" class="headerlink" title="find file"></a>find file</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir /s *foo*.txt</span><br></pre></td></tr></table></figure><h2 id="IIS"><a href="#IIS" class="headerlink" title="IIS"></a>IIS</h2><h3 id="Tool-to-View-the-IIS-Log-Logparser"><a href="#Tool-to-View-the-IIS-Log-Logparser" class="headerlink" title="Tool to View the IIS Log : Logparser"></a>Tool to View the IIS Log : Logparser</h3><p><a href="https://blogs.msdn.microsoft.com/friis/2014/02/06/how-to-analyse-iis-logs-using-logparser-logparser-studio/">https://blogs.msdn.microsoft.com/friis/2014/02/06/how-to-analyse-iis-logs-using-logparser-logparser-studio/</a></p><h3 id="Use-Cmd-to-Export-Import-IIS-Websites"><a href="#Use-Cmd-to-Export-Import-IIS-Websites" class="headerlink" title="Use Cmd to Export/Import IIS Websites"></a>Use Cmd to Export/Import IIS Websites</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># To Export the Application Pools</span></span><br><span class="line">%windir%\system32\inetsrv\appcmd list apppool /config /xml &gt; c:\apppools.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># To import  the Application Pools</span></span><br><span class="line">%windir%\system32\inetsrv\appcmd add apppool /<span class="keyword">in</span> &lt; c:\apppools.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># To Export all your website:</span></span><br><span class="line">%windir%\system32\inetsrv\appcmd list site /config /xml &gt; c:\sites.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># To Import all your website:</span></span><br><span class="line">%windir%\system32\inetsrv\appcmd add site /<span class="keyword">in</span> &lt; c:\sites.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># To export/import a single application pool:</span></span><br><span class="line"><span class="comment">##export</span></span><br><span class="line">%windir%\system32\inetsrv\appcmd list apppool “MyAppPool” /config /xml &gt; c:\myapppool.xml</span><br><span class="line"><span class="comment">##import</span></span><br><span class="line">%windir%\system32\inetsrv\appcmd add apppool /<span class="keyword">in</span> &lt; c:\myapppool.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># To export/import a single website:</span></span><br><span class="line"><span class="comment">##export</span></span><br><span class="line">%windir%\system32\inetsrv\appcmd list site “MyWebsite” /config /xml &gt; c:\mywebsite.xml</span><br><span class="line"><span class="comment">##import</span></span><br><span class="line">%windir%\system32\inetsrv\appcmd add site /<span class="keyword">in</span> &lt; c:\mywebsite.xml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows，cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Seafile 搭建私有云之二：ngnix ssl 反向代理</title>
      <link href="2021/06/01/seafile-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E4%B9%8B%E4%BA%8C%EF%BC%9Angnix-ssl-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
      <url>2021/06/01/seafile-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E4%B9%8B%E4%BA%8C%EF%BC%9Angnix-ssl-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>記錄一下自己搭建私有云的過程。这里主要介绍seafile的部分。</p><p>过程分两个博文</p><p><a href="https://friendly-mcnulty-50c07e.netlify.app/2021/05/27/seafile-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91/">Seafile 搭建私有云一：搭建Seafile</a></p><p><a href="https://friendly-mcnulty-50c07e.netlify.app/2021/06/01/seafile-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E4%B9%8B%E4%BA%8C%EF%BC%9Angnix-ssl-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/">Seafile 搭建私有云之二：ngnix ssl 反向代理</a></p></blockquote><h2 id="准备docker-compose-yml"><a href="#准备docker-compose-yml" class="headerlink" title="准备docker-compose.yml"></a>准备docker-compose.yml</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">  nginx: </span><br><span class="line">    image: nginx:latest</span><br><span class="line">    container_name: production_nginx</span><br><span class="line">    volumes:</span><br><span class="line">      - ./nginx.conf:/etc/nginx/nginx.conf</span><br><span class="line">      - ./certificate.pem:/etc/ssl/live/certificate.pem</span><br><span class="line">      - ./private_key.key:/etc/ssl/live/private_key.key</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">      - 443:443</span><br><span class="line">    networks:</span><br><span class="line">        - seafile-net</span><br><span class="line">    external_links:</span><br><span class="line">        - seafile</span><br><span class="line">  </span><br><span class="line">networks:</span><br><span class="line">  seafile-net:</span><br><span class="line">    external: true</span><br></pre></td></tr></table></figure><h2 id="准备ssl-certificates"><a href="#准备ssl-certificates" class="headerlink" title="准备ssl certificates"></a>准备ssl certificates</h2><p>依照如上位置存放ssl certificates 和private key</p><h2 id="准备ngnix-config"><a href="#准备ngnix-config" class="headerlink" title="准备ngnix config"></a>准备ngnix config</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">  error_log /etc/nginx/error_log.log warn;</span><br><span class="line">  client_max_body_size 20m;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  server &#123;</span><br><span class="line"></span><br><span class="line">server_name  host.com; # process the request with host as host.com</span><br><span class="line">listen       80;</span><br><span class="line">listen       443 ssl;</span><br><span class="line"></span><br><span class="line">ssl_certificate /etc/ssl/live/lb-home/fullchain.pem; # ssl certificate</span><br><span class="line">    ssl_certificate_key /etc/ssl/live/lb-home/privkey.pem; # private key</span><br><span class="line"></span><br><span class="line">location / &#123; </span><br><span class="line">    # common ngnix reverse proxy options</span><br><span class="line">proxy_http_version  1.1;</span><br><span class="line">proxy_cache_bypass  $http_upgrade;</span><br><span class="line"></span><br><span class="line">proxy_set_header Upgrade           $http_upgrade;</span><br><span class="line">proxy_set_header Connection        &quot;upgrade&quot;;</span><br><span class="line">proxy_set_header Host              $host;</span><br><span class="line">proxy_set_header X-Real-IP         $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;</span><br><span class="line">proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">proxy_set_header X-Forwarded-Host  $host;</span><br><span class="line">proxy_set_header X-Forwarded-Port  $server_port;</span><br><span class="line"># end common ngnix reverse proxy options</span><br><span class="line"></span><br><span class="line">proxy_pass http://localhost:80;  # forword request to http://localhost:80;</span><br><span class="line">index index.html; # index is index.html</span><br><span class="line">    if ($scheme = http) &#123;</span><br><span class="line">        return 301 https://$server_name$request_uri;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>准备ngnix config 文件，并存入相应位置。</p><p>ngnix config 参考 <a href="https://linuxize.com/post/nginx-reverse-proxy/">https://linuxize.com/post/nginx-reverse-proxy/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ngnix，反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>資產配置</title>
      <link href="2021/05/27/%E8%B3%87%E7%94%A2%E9%85%8D%E7%BD%AE/"/>
      <url>2021/05/27/%E8%B3%87%E7%94%A2%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>投資第一步，資產配置</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 投資 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 資產配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql datadump without password</title>
      <link href="2021/05/27/mysql-docker-datadump-without-password/"/>
      <url>2021/05/27/mysql-docker-datadump-without-password/</url>
      
        <content type="html"><![CDATA[<blockquote><p>很多時候需要執行mysql脚本，在執行脚本的時候需要指定用戶名密碼，把密碼放在脚本裏不太安全，本文介紹一&gt; 種方法，把密碼放在配置文件中，脚本執行的時候會自動從配置文件中讀取密碼。</p></blockquote><span id="more"></span><ul><li>第一步創建 <code>~/.my.cnf</code>文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqldump]</span><br><span class="line">user = mysqluser</span><br><span class="line">password = secret</span><br></pre></td></tr></table></figure><ul><li>第二步修改權限<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 ~/.my.cnf</span><br></pre></td></tr></table></figure></li><li>測試<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump  -uroot  --opt $dbname$  </span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技術 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Setup</title>
      <link href="2021/05/27/hexo-setup/"/>
      <url>2021/05/27/hexo-setup/</url>
      
        <content type="html"><![CDATA[<p>title: Hexo Setup<br>categories:</p><ul><li>技術<br>tags:</li><li>blog</li><li>Hexo</li><li>‘github ‘</li><li>github page<br>date: 2021-05-23 21:36:00</li></ul><hr><blockquote><p>This is a brief introduction on how to use hexo to setup a blog system hosting on github.<br>Hexo is a static blog system. We could use it to translate markdown files to html files which could be used in our static blog website.<br>To save the hosting cost, we are goting to deploy the html files to github. In this way, we will have a free blog system. :)<br>To achieve our goal we need to </p><ul><li>create a github page hosting repo</li><li>setup hexo locally to generate our ‘html’ blogs and deploy the html to github repo from &gt; last step</li><li>use hexo-admin to edit markdown file locally (optional)</li></ul></blockquote><span id="more"></span><h2 id="Create-Github-Page-Hosting-Repo"><a href="#Create-Github-Page-Hosting-Repo" class="headerlink" title="Create Github Page Hosting Repo"></a>Create Github Page Hosting Repo</h2><h2 id="Setup-Hexo-locally"><a href="#Setup-Hexo-locally" class="headerlink" title="Setup Hexo locally"></a>Setup Hexo locally</h2><h2 id="Add-Hexo-admin-Support"><a href="#Add-Hexo-admin-Support" class="headerlink" title="Add Hexo-admin Support"></a>Add Hexo-admin Support</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 技術 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> Hexo </tag>
            
            <tag> github </tag>
            
            <tag> github page </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Markdown</title>
      <link href="2021/05/27/hexo-markdown/"/>
      <url>2021/05/27/hexo-markdown/</url>
      
        <content type="html"><![CDATA[<p>title: Hexo Markdown<br>categories:</p><ul><li>技術<br>tags:</li><li>markdown</li><li>blog<br>date: 2021-05-21 14:23:00</li></ul><hr><blockquote><p>這篇文章主要介紹markdown的基本語法。 包括文章頭格式, 斜體, 粗體和删除线, 超链接, 圖片, 引用, 无序列表, 有序列表, 表格, 代码块, checkbox等等。<br>to be continued…</p></blockquote><span id="more"></span><h2 id="文章頭格式"><a href="#文章頭格式" class="headerlink" title="文章頭格式"></a>文章頭格式</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo Markdown</span><br><span class="line">date: 2016-01-15 20:19:32</span><br><span class="line">tags: [Markdown,LaTex,教程]</span><br><span class="line">categories: 学习</span><br><span class="line"><span class="section">toc: true</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="斜體-粗體和删除线"><a href="#斜體-粗體和删除线" class="headerlink" title="斜體,粗體和删除线"></a>斜體,粗體和删除线</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜體*</span> <span class="strong">**粗體**</span> ~~刪除的文字~~</span><br></pre></td></tr></table></figure><p><em>斜體</em> ,<br><strong>粗體</strong> ,<br><del>刪除的文字</del></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接文字</span>](<span class="link">链接地址 &quot;链接标题&quot;</span>)</span><br><span class="line">e.g.: [<span class="string">my blog</span>](<span class="link">http://wuhaibo.github.io</span>)</span><br></pre></td></tr></table></figure><p>比如: <a href="http://wuhaibo.github.io/">my blog</a></p><h2 id="圖片"><a href="#圖片" class="headerlink" title="圖片"></a>圖片</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8b25saW5lfGVufDB8fDB8fA%3D%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8b25saW5lfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60" width="50%"><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>使用 &gt; 表示文字引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; 野火烧不尽,春风吹又生</span><br></pre></td></tr></table></figure><blockquote><p>野火烧不尽,春风吹又生</p></blockquote><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">+</span> 无序列表项 一</span><br><span class="line"><span class="bullet">-</span> 子无序列表 一</span><br><span class="line"><span class="bullet">-</span> 子无序列表 二</span><br><span class="line"><span class="bullet">*</span> 子无序列表 三</span><br><span class="line"><span class="bullet">+</span> 无序列表项 二</span><br><span class="line"><span class="bullet">+</span> 无序列表项 三</span><br></pre></td></tr></table></figure><ul><li>无序列表项 一<ul><li>子无序列表 一</li><li>子无序列表 二<ul><li>子无序列表 三</li></ul></li></ul></li><li>无序列表项 二</li><li>无序列表项 三</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 有序列表项 一</span><br><span class="line"><span class="bullet">1.</span> 子有序列表项 一</span><br><span class="line"><span class="bullet">2.</span> 子有序列表项 二</span><br><span class="line"><span class="bullet">2.</span> 有序列表项 二</span><br><span class="line"><span class="bullet">3.</span> 有序列表项 三</span><br></pre></td></tr></table></figure><ol><li>有序列表项 一<ol><li>子有序列表项 一</li><li>子有序列表项 二</li></ol></li><li>有序列表项 二</li><li>有序列表项 三</li></ol><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>绘制表格格式如下,| 控制分列,- 控制分行,: 控制对齐方式。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| Item     | Value     | Qty   |</span><br><span class="line">| :------- | --------: | :---: |</span><br><span class="line">| Computer | 1600 USD  | 5     |</span><br><span class="line">| Phone    | 12 USD    | 12    |</span><br><span class="line">| Pipe     | 1 USD     | 234   |</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">Item</th><th align="right">Value</th><th align="center">Qty</th></tr></thead><tbody><tr><td align="left">Computer</td><td align="right">1600 USD</td><td align="center">5</td></tr><tr><td align="left">Phone</td><td align="right">12 USD</td><td align="center">12</td></tr><tr><td align="left">Pipe</td><td align="right">1 USD</td><td align="center">234</td></tr></tbody></table><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用 <span class="code">``` some codes ```</span>表示的代码块（左侧无空格）</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="checkbox"><a href="#checkbox" class="headerlink" title="checkbox"></a>checkbox</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [x] Write the press release</span><br><span class="line"><span class="bullet">-</span> [ ] Update the website</span><br><span class="line"><span class="bullet">-</span> [ ] Contact the media</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><input checked="" disabled="" type="checkbox"> Write the press release</li><li><input disabled="" type="checkbox"> Update the website</li><li><input disabled="" type="checkbox"> Contact the media</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技術 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 常用命令</title>
      <link href="2021/05/27/Ubuntu-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2021/05/27/Ubuntu-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>title: Ubuntu 常用命令<br>author: haibo<br>tags:</p><ul><li>Ubuntu</li><li>bash<br>categories:</li><li>技術<br>date: 2021-05-23 22:05:00</li></ul><hr><blockquote><p>Ubuntu 常用命令</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Seafile 搭建私有云一：搭建Seafile</title>
      <link href="2021/05/27/Seafile-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91/"/>
      <url>2021/05/27/Seafile-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>記錄一下自己搭建私有云的過程。这里主要介绍seafile的部分。</p><p>过程分两个博文</p><p><a href="https://friendly-mcnulty-50c07e.netlify.app/2021/05/27/seafile-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91/">Seafile 搭建私有云一：搭建Seafile</a></p><p><a href="https://friendly-mcnulty-50c07e.netlify.app/2021/06/01/seafile-%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E4%BA%91%E4%B9%8B%E4%BA%8C%EF%BC%9Angnix-ssl-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/">Seafile 搭建私有云之二：ngnix ssl 反向代理</a></p></blockquote><h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><p>本文假設要把seafile用以docker的形式安裝在ubuntu 18上.<br>然後使用ngnix作爲反向代理實現https。 </p><h2 id="安裝Seafile"><a href="#安裝Seafile" class="headerlink" title="安裝Seafile"></a>安裝Seafile</h2><h3 id="安裝docker-compose"><a href="#安裝docker-compose" class="headerlink" title="安裝docker-compose"></a>安裝docker-compose</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker-compose -y</span><br></pre></td></tr></table></figure><h3 id="準備docker-compose-yml文件"><a href="#準備docker-compose-yml文件" class="headerlink" title="準備docker-compose.yml文件"></a>準備docker-compose.yml文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2.0&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mariadb:10.5</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">seafile-mysql</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=</span>  <span class="comment"># Requested, set the root&#x27;s password of MySQL service.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_LOG_CONSOLE=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/seafile-mysql/db:/var/lib/mysql</span>  <span class="comment"># Requested, specifies the path to MySQL data persistent store.</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">seafile-net</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">memcached:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">memcached:1.5.6</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">seafile-memcached</span></span><br><span class="line">    <span class="attr">entrypoint:</span> <span class="string">memcached</span> <span class="string">-m</span> <span class="number">256</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">seafile-net</span></span><br><span class="line">          </span><br><span class="line">  <span class="attr">seafile:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">seafileltd/seafile-mc:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">seafile</span></span><br><span class="line">    <span class="attr">expose:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80&quot;</span></span><br><span class="line"><span class="comment">#      - &quot;443:443&quot;  # If https is enabled, cancel the comment.</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/opt/seafile-data:/shared</span>   <span class="comment"># Requested, specifies the path to Seafile data persistent store.</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_HOST=db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DB_ROOT_PASSWD=</span>  <span class="comment"># Requested, the value shuold be root&#x27;s password of MySQL service.</span></span><br><span class="line"><span class="comment">#      - TIME_ZONE=Asia/Shanghai # Optional, default is UTC. Should be uncomment and set to your local time zone.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SEAFILE_ADMIN_EMAIL=</span> <span class="comment"># Specifies Seafile admin user, default is &#x27;me@example.com&#x27;.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SEAFILE_ADMIN_PASSWORD=</span> <span class="comment"># Specifies Seafile admin password, default is &#x27;asecret&#x27;.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SEAFILE_SERVER_LETSENCRYPT=false</span>   <span class="comment"># Whether use letsencrypt to generate cert.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SEAFILE_SERVER_HOSTNAME=</span> <span class="comment"># Specifies your host name.</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">memcached</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">seafile-net</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">seafile-net:</span></span><br></pre></td></tr></table></figure><p>這裏要把<br><code>MYSQL_ROOT_PASSWORD</code>， <code>DB_ROOT_PASSWD</code>，<code>SEAFILE_ADMIN_EMAIL</code>，<code>SEAFILE_ADMIN_PASSWORD</code>，<code>SEAFILE_SERVER_HOSTNAME</code><br>設定為自己需要的值。</p><p>另外</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">seafile-net:</span></span><br></pre></td></tr></table></figure><p>這裏表明這個文件的services共用一個叫 <code>seafile-net</code>的網絡。</p><p>docker Seafile service 于主機共享了  <code>/opt/seafile-data（host）:/shared（container）</code></p><h3 id="啓動Seafile-server"><a href="#啓動Seafile-server" class="headerlink" title="啓動Seafile server"></a>啓動Seafile server</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">seafile-net:</span></span><br></pre></td></tr></table></figure><h3 id="Log-Path"><a href="#Log-Path" class="headerlink" title="Log Path"></a>Log Path</h3><ul><li><code>/opt/seafile-data/logs/seafile</code> 是seafile的日志</li><li><code>/opt/seafile-data/logs/seafile</code> 是container的日志</li></ul><h3 id="備份和恢復"><a href="#備份和恢復" class="headerlink" title="備份和恢復"></a>備份和恢復</h3><p>目標：建立一個ubuntu cron job 來定時備份</p><h4 id="建立備份脚本"><a href="#建立備份脚本" class="headerlink" title="建立備份脚本"></a>建立備份脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cronjob_name=<span class="string">&quot;backupSeafile&quot;</span></span><br><span class="line">today=$(date +%Y%m%d_%I%M%S)</span><br><span class="line">log_file=<span class="string">&quot;/home/williamwood/cronjob/cronjob.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\n\n*******************run <span class="variable">$cronjob_name</span> at <span class="variable">$today</span>******************&quot;</span> &gt;&gt; <span class="variable">$log_file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate backup data locally</span></span><br><span class="line">data_folder=/opt/seafile-backup/data</span><br><span class="line"></span><br><span class="line"><span class="comment">## 增量備份</span></span><br><span class="line">rsync -az /opt/seafile-data/seafile /opt/seafile-backup/data/</span><br><span class="line"><span class="built_in">cd</span> /opt/seafile-backup/data &amp;&amp; rm -rf ccnet</span><br><span class="line"></span><br><span class="line"><span class="comment">## 簡單copy 備份</span></span><br><span class="line"><span class="comment"># cp -R /opt/seafile-data/seafile /opt/seafile-backup/data/</span></span><br><span class="line"><span class="comment"># cd /opt/seafile-backup/data &amp;&amp; rm -rf ccnet</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;seafile data backup done&quot;</span> &gt;&gt; <span class="variable">$log_file</span></span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it seafile-mysql mysqldump  -uroot -p$password$ --opt ccnet_db &gt; /opt/seafile-backup/databases/ccnet_db.sql</span><br><span class="line">docker <span class="built_in">exec</span> -it seafile-mysql mysqldump  -uroot -p$password$ --opt seafile_db &gt; /opt/seafile-backup/databases/seafile_db.sql</span><br><span class="line">docker <span class="built_in">exec</span> -it seafile-mysql mysqldump  -uroot -p$password$ --opt seahub_db &gt; /opt/seafile-backup/databases/seahub_db.sql</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;seafile database backup done&quot;</span> &gt;&gt; <span class="variable">$log_file</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;**********************************end***********************************&quot;</span> &gt;&gt; <span class="variable">$log_file</span></span><br></pre></td></tr></table></figure><h4 id="創建cronjob"><a href="#創建cronjob" class="headerlink" title="創建cronjob"></a>創建cronjob</h4><ul><li>以root賬戶執行cronjob脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cronjob -e</span><br></pre></td></tr></table></figure><ul><li>脚本執行后寫入任務執行時間和執行脚本</li></ul><img src="https://res.cloudinary.com/dr8wkuoot/image/upload/v1621939199/blog/cronjob_fvbqfw.jpg"><h3 id="恢復"><a href="#恢復" class="headerlink" title="恢復"></a>恢復</h3><h4 id="恢復database"><a href="#恢復database" class="headerlink" title="恢復database"></a>恢復database</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker cp /opt/seafile-backup/databases/ccnet_db.sql seafile-mysql:/tmp/ccnet_db.sql</span><br><span class="line">docker cp /opt/seafile-backup/databases/seafile_db.sql seafile-mysql:/tmp/seafile_db.sql</span><br><span class="line">docker cp /opt/seafile-backup/databases/seahub_db.sql seafile-mysql:/tmp/seahub_db.sql</span><br><span class="line"></span><br><span class="line">docker <span class="built_in">exec</span> -it seafile-mysql /bin/sh -c <span class="string">&quot;mysql -uroot -p$psd$ ccnet_db &lt; /tmp/ccnet_db.sql&quot;</span></span><br><span class="line">docker <span class="built_in">exec</span> -it seafile-mysql /bin/sh -c <span class="string">&quot;mysql -uroot -p$psd$ seafile_db &lt; /tmp/seafile_db.sql&quot;</span></span><br><span class="line">docker <span class="built_in">exec</span> -it seafile-mysql /bin/sh -c <span class="string">&quot;mysql -uroot -p$psd$ seahub_db &lt; /tmp/seahub_db.sql&quot;</span></span><br></pre></td></tr></table></figure><h4 id="恢復Seafile-data"><a href="#恢復Seafile-data" class="headerlink" title="恢復Seafile data"></a>恢復Seafile data</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -R /opt/seafile-backup/data/* /opt/seafile-data/seafile/</span><br></pre></td></tr></table></figure><h2 id="碰到的問題"><a href="#碰到的問題" class="headerlink" title="碰到的問題"></a>碰到的問題</h2><ul><li>問題：修改網站地址后（比如測試時用了ip作爲網址，後來改為域名），資源網址沒改，導致錯誤avatars圖片錯誤。</li><li>解決辦法，重啓memcached </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart seafile-memcached</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技術 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Seafile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pandas Cheat Sheet</title>
      <link href="2021/05/27/Pandas-Cheat-Sheet/"/>
      <url>2021/05/27/Pandas-Cheat-Sheet/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Pandas Cheat Sheet</p></blockquote><h2 id="创建dataframe"><a href="#创建dataframe" class="headerlink" title="创建dataframe"></a>创建dataframe</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按列创建</span></span><br><span class="line">df = pd.DataFrame(</span><br><span class="line">    &#123;<span class="string">&quot;a&quot;</span> : [<span class="number">4</span> ,<span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">    <span class="string">&quot;b&quot;</span> : [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>],</span><br><span class="line">    <span class="string">&quot;c&quot;</span> : [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]&#125;,</span><br><span class="line">    index = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按行创建</span></span><br><span class="line">df = pd.DataFrame(</span><br><span class="line">  [[<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>],</span><br><span class="line">  [<span class="number">5</span>, <span class="number">8</span>, <span class="number">11</span>],</span><br><span class="line">  [<span class="number">6</span>, <span class="number">9</span>, <span class="number">12</span>]],</span><br><span class="line">  index=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">  columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br></pre></td></tr></table></figure><h2 id="改变dataframe"><a href="#改变dataframe" class="headerlink" title="改变dataframe"></a>改变dataframe</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照某列的值进行行排序</span></span><br><span class="line">df.sort_values(<span class="string">&#x27;mpg&#x27;</span>)</span><br><span class="line">df.sort_values(<span class="string">&#x27;mpg&#x27;</span>,ascending=<span class="literal">False</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment"># 列名重命名</span></span><br><span class="line"><span class="comment"># y -&gt; year</span></span><br><span class="line">df.rename(columns = &#123;<span class="string">&#x27;y&#x27;</span>:<span class="string">&#x27;year&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按索引排序</span></span><br><span class="line">df.sort_index()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置DataFrame的索引为行号，原索引变为普通列</span></span><br><span class="line">df.reset_index()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除特定列</span></span><br><span class="line">df.drop(columns=[<span class="string">&#x27;Length&#x27;</span>,<span class="string">&#x27;Height&#x27;</span>])</span><br></pre></td></tr></table></figure><h2 id="添加新列或者新行"><a href="#添加新列或者新行" class="headerlink" title="添加新列或者新行"></a>添加新列或者新行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">in</span> [<span class="number">1</span>]: <span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">in</span> [<span class="number">2</span>]: data = pd.DataFrame(np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]]), columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>])</span><br><span class="line"><span class="keyword">in</span> [<span class="number">3</span>]: data</span><br><span class="line">out[<span class="number">3</span>]:</span><br><span class="line"> a b c</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">2</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加新列</span></span><br><span class="line"><span class="comment"># simple</span></span><br><span class="line">data[<span class="string">&#x27;d&#x27;</span>] = <span class="number">0</span> <span class="comment"># or give a new serie like [3,2,1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use loc </span></span><br><span class="line">data.loc[:, <span class="string">&#x27;d&#x27;</span>] = <span class="number">0</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># use concat 添加多个列</span></span><br><span class="line">newColDf = pd.DataFrame(&#123;<span class="string">&quot;d&quot;</span>:[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],<span class="string">&quot;e&quot;</span>:[<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>]&#125;)</span><br><span class="line">data = pd.concat([data, newColDf], axis=<span class="number">1</span>,ignore_index=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加新行</span></span><br><span class="line"><span class="comment"># use loc </span></span><br><span class="line">data.loc[<span class="number">4</span>] = <span class="number">0</span> <span class="comment"># or give a new serie like [3,2,1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># use append 一次多行</span></span><br><span class="line">data.append(pd.DataFrame([[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]],columns=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>]), ignore_index = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h2 id="按行或者列取得dataframe子集"><a href="#按行或者列取得dataframe子集" class="headerlink" title="按行或者列取得dataframe子集"></a>按行或者列取得dataframe子集</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 筛选满足逻辑表达式的数据</span></span><br><span class="line">df[df.Length &gt; <span class="number">7</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除重复行 (仅考虑列)</span></span><br><span class="line">df.drop_duplicates()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择前n行 或 后n行</span></span><br><span class="line">df.head(n)</span><br><span class="line">df.tail(n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按行选取行</span></span><br><span class="line">df.iloc[<span class="number">10</span>:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选取指定的多列</span></span><br><span class="line">df[[<span class="string">&#x27;width&#x27;</span>,<span class="string">&#x27;length&#x27;</span>,<span class="string">&#x27;species&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选取指定的单列</span></span><br><span class="line">df[<span class="string">&#x27;width&#x27;</span>] <span class="keyword">or</span> df.width</span><br></pre></td></tr></table></figure><h2 id="dataframe-拼接"><a href="#dataframe-拼接" class="headerlink" title="dataframe 拼接"></a>dataframe 拼接</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 行拼接</span></span><br><span class="line">pd.concat([df1,df2])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列拼接</span></span><br><span class="line"><span class="comment"># DataFrames的列拼接</span></span><br><span class="line">pd.concat([df1,df2], axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="两个dataframe-join，类似table-join"><a href="#两个dataframe-join，类似table-join" class="headerlink" title="两个dataframe join，类似table join"></a>两个dataframe join，类似table join</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Spyder Editor</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Dies ist eine temporäre Skriptdatei.</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">left = pd.DataFrame(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;key1&quot;</span>: [<span class="string">&quot;K0&quot;</span>, <span class="string">&quot;K0&quot;</span>, <span class="string">&quot;K1&quot;</span>, <span class="string">&quot;K2&quot;</span>],</span><br><span class="line">            <span class="string">&quot;key2&quot;</span>: [<span class="string">&quot;K0&quot;</span>, <span class="string">&quot;K1&quot;</span>, <span class="string">&quot;K0&quot;</span>, <span class="string">&quot;K1&quot;</span>],</span><br><span class="line">            <span class="string">&quot;A&quot;</span>: [<span class="string">&quot;A0&quot;</span>, <span class="string">&quot;A1&quot;</span>, <span class="string">&quot;A2&quot;</span>, <span class="string">&quot;A3&quot;</span>],</span><br><span class="line">            <span class="string">&quot;B&quot;</span>: [<span class="string">&quot;B0&quot;</span>, <span class="string">&quot;B1&quot;</span>, <span class="string">&quot;B2&quot;</span>, <span class="string">&quot;B3&quot;</span>],</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">right = pd.DataFrame(</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;key1&quot;</span>: [<span class="string">&quot;K0&quot;</span>, <span class="string">&quot;K1&quot;</span>, <span class="string">&quot;K1&quot;</span>, <span class="string">&quot;K2&quot;</span>],</span><br><span class="line">            <span class="string">&quot;key2&quot;</span>: [<span class="string">&quot;K0&quot;</span>, <span class="string">&quot;K0&quot;</span>, <span class="string">&quot;K0&quot;</span>, <span class="string">&quot;K0&quot;</span>],</span><br><span class="line">            <span class="string">&quot;C&quot;</span>: [<span class="string">&quot;C0&quot;</span>, <span class="string">&quot;C1&quot;</span>, <span class="string">&quot;C2&quot;</span>, <span class="string">&quot;C3&quot;</span>],</span><br><span class="line">            <span class="string">&quot;D&quot;</span>: [<span class="string">&quot;D0&quot;</span>, <span class="string">&quot;D1&quot;</span>, <span class="string">&quot;D2&quot;</span>, <span class="string">&quot;D3&quot;</span>],</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="comment"># inner join, default is inner</span></span><br><span class="line">result = pd.merge(left, right, how=<span class="string">&quot;inner&quot;</span>, on=[<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;key2&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># above is same as </span></span><br><span class="line">result = pd.merge(left, right, on=[<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;key2&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># left join </span></span><br><span class="line">result = pd.merge(left, right, how=<span class="string">&quot;left&quot;</span>, on=[<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;key2&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># right join</span></span><br><span class="line">result = pd.merge(left, right, how=<span class="string">&quot;right&quot;</span>, on=[<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;key2&quot;</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># outer join</span></span><br><span class="line">result = pd.merge(left, right, how=<span class="string">&quot;outer&quot;</span>, on=[<span class="string">&quot;key1&quot;</span>, <span class="string">&quot;key2&quot;</span>])</span><br></pre></td></tr></table></figure><h2 id="汇总函数"><a href="#汇总函数" class="headerlink" title="汇总函数"></a>汇总函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>()</span><br><span class="line">count() <span class="comment"># 统计non-na的个数</span></span><br><span class="line">median() </span><br><span class="line">quantile() <span class="comment"># 计算p分位数</span></span><br><span class="line">apply(function) <span class="comment"># 将传入函数作用于每个对象</span></span><br><span class="line"><span class="built_in">min</span>()</span><br><span class="line"><span class="built_in">max</span>()</span><br><span class="line">mean()</span><br><span class="line">var() <span class="comment"># 方差</span></span><br><span class="line">std() <span class="comment"># 标准差</span></span><br></pre></td></tr></table></figure><h2 id="处理缺失-NaN"><a href="#处理缺失-NaN" class="headerlink" title="处理缺失 NaN"></a>处理缺失 NaN</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去掉含有NA值的行</span></span><br><span class="line">df.dropna()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将所有的NA/null值替换为value</span></span><br><span class="line">df.fillna(value)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技術 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pandas </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
